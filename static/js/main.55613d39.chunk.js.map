{"version":3,"sources":["navbar/Navbar.js","grid/AddFeed.js","api-feeds/SearchBar.js","api-feeds/reddit/RedditItem.js","api-feeds/reddit/Reddit.js","api-feeds/twitter/Twitter.js","api-feeds/youtube/youtube-api.js","api-feeds/youtube/YoutubeItem.js","api-feeds/youtube/Youtube.js","api-feeds/Instagram.js","grid/Grid.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Row","className","Col","Button","variant","AddFeed","props","state","feed","onSelect","bind","onClick","e","this","setState","value","onAddItem","alert","options","onChange","React","Component","SearchBar","InputGroup","prepend","FormControl","onSubmit","onKeyDown","onKeyUp","placeholder","append","formatToK","number","str","toString","slice","RedditItem","previewImage","file","data","preview","enabled","url","includes","images","resolutions","length","replace","subreddit","post_link","permalink","user_link","author","sm","icon","faThumbsUp","ups","faComment","num_comments","lg","href","target","subreddit_name_prefixed","moment","unix","created_utc","fromNow","title","selftext","Parser","ReactHTMLParser","selftext_html","is_video","width","media","reddit_video","height","controls","preload","autoPlay","loop","muted","src","fallback_url","type","alt","oembed","html","Reddit","currentSubreddit","sort","files","after","before","page","defaultValue","handleScroll","scrollHeight","scrollTop","clientHeight","console","log","nextPage","fetch","then","res","json","error","concat","children","catch","sorts","changeSort","changeSubreddit","sub","endsWith","toLowerCase","obj","Prepend","Text","onScroll","map","key","id","Twitter","screenName","searchTerm","submitByEnter","renderTimeline","term","keyCode","window","$","remove","elem","document","getElementById","twttr","widgets","createTimeline","sourceType","innerHTML","Append","axios","create","baseURL","YoutubeItem","video","videoId","videoSrc","videoLink","allowFullScreen","faEye","statistics","viewCount","commentCount","likeCount","faThumbsDown","dislikeCount","snippet","description","Youtube","videos","nextPageToken","currentSearch","searchVideo","a","youtube","get","params","part","maxResults","q","videoEmbeddable","response","getStatistics","items","pageToken","getMostPopular","chart","regionCode","ids","join","response2","item","idx","Instagram","ResponsiveGridLayout","WidthProvider","Responsive","originalLayouts","getFromLS","originalItems","originalNewCounter","Grid","layouts","JSON","parse","stringify","newCounter","layout","saveToLS","i","_","reject","name","x","cols","y","w","h","minW","minH","el","data-grid","onRemoveItem","faTrashAlt","faArrowsAlt","md","xs","xxs","onLayoutChange","draggableHandle","createElement","ls","localStorage","getItem","setItem","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55613d39.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './dropdown-style.css';\r\nimport './navbar.css';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <Row className=\"navbar\">\r\n            <Col className=\"d-flex justify-content-end\">\r\n                <Button variant=\"primary\">Login</Button>\r\n                <Button variant=\"secondary\">Sign up</Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n}","import Dropdown from \"react-dropdown\";\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './actionbar.css';\r\n\r\nexport default class AddFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            feed: null\r\n        };\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n    };\r\n\r\n    onSelect(e) {\r\n        this.setState({\r\n            feed: e.value\r\n        })\r\n    };\r\n\r\n    onClick() {\r\n        if (this.state.feed) {\r\n            this.props.onAddItem(this.state.feed);\r\n        } else {\r\n            alert('Please choose a feed');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            feed: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const options = [\"Twitter\", \"Instagram\", \"Youtube\", \"Reddit\"];\r\n\r\n        return (\r\n            <div className=\"actionbar\">\r\n                <h2> Procrastinator feeds </h2>\r\n                <Dropdown options={options} onChange={this.onSelect} value={'Select feed'}/>\r\n                <Button variant=\"primary\" onClick={this.onClick}>Add Item</Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {InputGroup} from \"react-bootstrap\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\nexport default class SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InputGroup>\r\n                {this.props.prepend}\r\n                <FormControl onChange={this.props.onChange}\r\n                             onSubmit={this.props.onSubmit}\r\n                             onKeyDown={this.props.onKeyDown}\r\n                             onKeyUp={this.props.onKeyUp}\r\n                             placeholder={this.props.placeholder}/>\r\n                {this.props.append}\r\n            </InputGroup>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport moment from 'moment';\r\nimport ReactHTMLParser from 'react-html-parser';\r\nimport Parser from 'react-html-parser';\r\nimport {faThumbsUp, faComment} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst RedditItem = ({file}) => {\r\n    let previewImage;\r\n    if (file.data.preview && file.data.preview.enabled && !file.data.url.includes(\".gif\")) {\r\n        previewImage = file.data.preview.images[0].resolutions[file.data.preview.images[0].resolutions.length - 1].url;\r\n        previewImage = previewImage.replace(/&amp;/g, \"&\");\r\n    } else if (file.data.url.includes(\".gifv\")) {\r\n        previewImage = file.data.url.slice(0, file.data.url.length - 1);\r\n    } else if (file.data.url.includes(\".gif\")) {\r\n        previewImage = file.data.url;\r\n    } else {\r\n        previewImage = null;\r\n    }\r\n    let subreddit = \"https://reddit.com/r/\" + file.data.subreddit;\r\n    let post_link = \"https://reddit.com\" + file.data.permalink;\r\n    let user_link = \"https://reddit.com/u/\" + file.data.author;\r\n    // console.log(file.data);\r\n    return (\r\n        <div className='feed-item'>\r\n            <Col sm='1'>\r\n                <FontAwesomeIcon icon={faThumbsUp}/><br/>{formatToK(file.data.ups)}<br/><br/>\r\n                <FontAwesomeIcon icon={faComment}/><br/>{formatToK(file.data.num_comments)} <br/>\r\n            </Col>\r\n            <Col lg='11'>\r\n                <a href={subreddit} target='_blank'>{file.data.subreddit_name_prefixed}</a><span> | Posted by</span><a\r\n                href={user_link}\r\n                target='_blank'> u/{file.data.author}</a> {moment.unix(file.data.created_utc).fromNow()}\r\n                <a href={post_link} target='_blank'><h3>{file.data.title}</h3></a>\r\n                {file.data.selftext !== \"\" ? <div>{Parser(ReactHTMLParser(file.data.selftext_html))}</div> : ''}\r\n                {\r\n                    file.data.is_video ? <video className=\"reddit-image\"\r\n                                                width={file.data.media.reddit_video.width}\r\n                                                height={file.data.media.reddit_video.height}\r\n                                                controls\r\n                                                preload=\"auto\"\r\n                                                autoPlay=\"autoPlay\"\r\n                                                loop=\"loop\"\r\n                                                muted=\"muted\">\r\n                            <source src={file.data.media.reddit_video.fallback_url} type=\"video/mp4\"/>\r\n                        </video>\r\n                        : previewImage ? <img className='reddit-image' src={previewImage} alt={previewImage}/>\r\n                        : file.data.media && file.data.media.type === \"youtube.com\" ? Parser(ReactHTMLParser(file.data.media.oembed.html))\r\n                        : ''\r\n                }\r\n                <br/>\r\n            </Col>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nfunction formatToK(number) {\r\n    var str = number.toString();\r\n    if (number > 1000000) {\r\n        str = str.slice(0) + \".\" + str.slice(1,2) + \"m\";\r\n    } else if (number > 100000) {\r\n        str = str.slice(0,3) + \"k\"\r\n    } else if (number > 10000) {\r\n        str = str.slice(0,2) + \".\" + str.slice(2,3) + \"k\"\r\n    } else if (number >= 1000) {\r\n        str = str.slice(0,1) + \".\" + str.slice(1,2) + \"k\"\r\n    }\r\n    return str;\r\n}\r\n\r\nexport default RedditItem;\r\nexport {formatToK};","import React from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport RedditItem from \"./RedditItem\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport '../feed.css';\r\nimport './reddit.css';\r\nimport {InputGroup} from \"react-bootstrap\";\r\n\r\nexport default class Reddit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.url = 'https://www.reddit.com/';\r\n        this.sorts = ['Hot', 'New', 'Top', 'Controversial', 'Rising'];\r\n\r\n        this.changeSort = this.changeSort.bind(this);\r\n        this.changeSubreddit = this.changeSubreddit.bind(this);\r\n    }\r\n\r\n    state = {\r\n        currentSubreddit: '',\r\n        sort: 'hot',\r\n        files: [],\r\n        after: null,\r\n        before: null,\r\n        page: 1,\r\n        defaultValue: 'Sort by'\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.changeSubreddit(this.state.currentSubreddit);\r\n    }\r\n\r\n    handleScroll = (e) => {\r\n        const bottom = e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight;\r\n        if (bottom) {\r\n            console.log('header bottom reached');\r\n            this.nextPage();\r\n        }\r\n    };\r\n\r\n    nextPage = () => {\r\n        fetch(this.url + this.state.currentSubreddit + \"/\" + this.state.sort + \".json?count=\" + (this.state.page * 10 - 1) + \"&after=\" + this.state.after)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                if (!data.error) {\r\n                    this.setState(() => ({\r\n                        files: data ? this.state.files.slice().concat(data.data.children) : this.state.files,\r\n                        after: data.data.after,\r\n                        before: data.data.before,\r\n                        page: this.state.page + 1\r\n                    }))\r\n                }\r\n            }).catch(console.log)\r\n    };\r\n\r\n    changeSubreddit(sub) {\r\n        sub = sub.endsWith(\"r/\") ? \"\" : sub;\r\n        this.setState({\r\n            files: [],\r\n            currentSubreddit: sub,\r\n            page: 1\r\n        });\r\n        fetch(this.url + sub + \"/\" + this.state.sort + '.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                if (!data.error) {\r\n                    this.setState({\r\n                        files: data.data.children,\r\n                        after: data.data.after,\r\n                        before: data.data.before\r\n                    });\r\n                }\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    changeSort(sort) {\r\n        this.setState({\r\n            files: [],\r\n            sort: sort.toLowerCase(),\r\n            page: 1,\r\n            defaultValue: sort\r\n        });\r\n        fetch(this.url + this.state.currentSubreddit + \"/\" + sort.toLowerCase() + '.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                if (!data.error) {\r\n                    this.setState({\r\n                        files: data.data.children,\r\n                        after: data.data.after,\r\n                        before: data.data.before\r\n                    });\r\n                }\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='feed'>\r\n                <div className='d-flex justify-content-between'>\r\n                    <div>\r\n                        <SearchBar onChange={(obj) => this.changeSubreddit(\"r/\" + obj.target.value)}\r\n                        placeholder=\"Subreddit\" prepend={<InputGroup.Prepend>\r\n                                                            <InputGroup.Text>\r\n                                                                r/\r\n                                                            </InputGroup.Text>\r\n                                                        </InputGroup.Prepend>}\r\n                        />\r\n                    </div>\r\n                    <Dropdown options={this.sorts} onChange={(obj) => this.changeSort(obj.value)} value={this.state.defaultValue}\r\n                              placeholder=\"Select an option\"/>\r\n                </div>\r\n                <div className='feed-items' onScroll={this.handleScroll}>\r\n                {\r\n                    (this.state.files.length !== 0) ?\r\n                        this.state.files.map((file) => (\r\n                        <RedditItem key={file.data.id} file={file}/>\r\n                        ))\r\n                        : \"No subreddit found...\"\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport {InputGroup} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default class Twitter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submitByEnter = this.submitByEnter.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    state = {\r\n        screenName: \"csuf\",\r\n        searchTerm: \"\"\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.renderTimeline();\r\n    }\r\n\r\n    onChange(term) {\r\n        this.setState({\r\n            searchTerm: term\r\n        })\r\n    }\r\n\r\n    submitByEnter(e) {\r\n        if (e.keyCode === 13) {\r\n            this.onSubmit();\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.state.searchTerm.length > 0) {\r\n            window.$(\"#twitter iframe\").remove();\r\n            window.$(\"#twitter p\").remove();\r\n\r\n            this.setState({\r\n                screenName: this.state.searchTerm\r\n            }, () => {\r\n                this.renderTimeline();\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n   renderTimeline() {\r\n        let elem = document.getElementById(\"twitter\");\r\n\r\n        window.twttr.widgets.createTimeline(\r\n            {\r\n                sourceType: \"profile\",\r\n                screenName: this.state.screenName\r\n            },\r\n            elem,\r\n            {\r\n                height: 1500,\r\n            }\r\n        ).then(() => {\r\n            if (!elem.innerHTML.toString().includes('data-widget-id')) {\r\n                elem.innerHTML = \"<p> No twitter tag found... </p>\"\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='feed'>\r\n                <div className='pr-2'>\r\n                    <div>\r\n                        <SearchBar onChange={(e) => this.onChange(e.target.value)}\r\n                                   onKeyUp={this.submitByEnter}\r\n                                   placeholder=\"Twitter tag\"\r\n                                   prepend={<InputGroup.Prepend>\r\n                                       <InputGroup.Text>\r\n                                           @\r\n                                       </InputGroup.Text>\r\n                                   </InputGroup.Prepend>}\r\n                                   append={<InputGroup.Append>\r\n                                       <Button variant=\"primary\" onClick={this.onSubmit}>\r\n                                       Search\r\n                                       </Button>\r\n                                   </InputGroup.Append>}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div id=\"twitter\" className='feed-items'>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n})","import React from 'react';\r\nimport './youtube.css';\r\nimport {faThumbsUp, faThumbsDown, faComment, faEye} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {formatToK} from '../reddit/RedditItem';\r\n\r\nconst YoutubeItem = ({video}) => {\r\n    if (!video) {\r\n        return <div>Loading ...</div>;\r\n    }\r\n\r\n    let id = video.id.videoId ? video.id.videoId : video.id;\r\n    const videoSrc = `https://www.youtube.com/embed/${id}`;\r\n    const videoLink = `https://www.youtube.com/watch?v=${id}`;\r\n    console.log(typeof(video));\r\n    return (\r\n        <div className=\"feed-item flex-column\">\r\n            <div>\r\n                <iframe className='youtube-video'\r\n                        width='1080'\r\n                        height='720'\r\n                        preload=\"auto\"\r\n                        src={videoSrc} allowFullScreen title='Video player'/>\r\n            </div>\r\n            <div className=\"youtube-statistics\">\r\n                <div className=\"info\">\r\n                    <div className=\"views\"><FontAwesomeIcon icon={faEye}/> {video.statistics.viewCount}</div>\r\n                    <div className=\"comments\"><FontAwesomeIcon icon={faComment}/> {video.statistics.commentCount}</div>\r\n                </div>\r\n                <div className=\"rating\">\r\n                    <div className=\"likes\"><FontAwesomeIcon icon={faThumbsUp}/> {formatToK(video.statistics.likeCount)}</div>\r\n                    <div className=\"dislikes\"><FontAwesomeIcon icon={faThumbsDown}/> {formatToK(video.statistics.dislikeCount)}</div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <a href={videoLink} target=\"_blank\"><h4>{video.snippet.title}</h4></a>\r\n                <p className=\"youtube-description\">{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default YoutubeItem;","import React from \"react\";\r\nimport youtube from './youtube-api.js';\r\nimport '../feed.css';\r\nimport SearchBar from \"../SearchBar\";\r\nimport YoutubeItem from \"./YoutubeItem\";\r\nimport {InputGroup} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nexport default class Youtube extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.part = 'snippet, statistics';\r\n        this.key = 'AIzaSyBM227ZaFzrdYsqNDdwwfRBhO_N8ARpR-w';\r\n        this.maxResults = 10;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.submitByEnter = this.submitByEnter.bind(this);\r\n    }\r\n\r\n    state = {\r\n        videos: [],\r\n        nextPageToken: \"\",\r\n        currentSearch: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMostPopular();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.state.currentSearch.length === 0) {\r\n            this.getMostPopular();\r\n        } else {\r\n            this.searchVideo(this.state.currentSearch);\r\n        }\r\n    }\r\n\r\n    onChange(term) {\r\n        this.setState({\r\n            currentSearch: term\r\n        })\r\n    }\r\n\r\n    submitByEnter(e) {\r\n        if (e.keyCode === 13) {\r\n            this.onSubmit();\r\n        }\r\n    }\r\n\r\n    searchVideo = async (term) => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                part: 'snippet',\r\n                key: this.key,\r\n                maxResults: this.maxResults,\r\n                q: term,\r\n                type: \"video\",\r\n                videoEmbeddable: true\r\n            }\r\n        });\r\n\r\n        response.data.items = await this.getStatistics(response);\r\n\r\n        this.setState({\r\n            videos: response.data.items,\r\n            nextPageToken: response.data.nextPageToken,\r\n            currentSearch: term\r\n        });\r\n\r\n    };\r\n\r\n    async getStatistics(response) {\r\n        let ids = response.data.items.map((video) => {\r\n            return video.id.videoId\r\n        });\r\n\r\n        ids = ids.join(', ');\r\n\r\n        const response2 = await youtube.get('/videos', {\r\n            params: {\r\n                part: 'statistics',\r\n                key: this.key,\r\n                maxResults: this.maxResults,\r\n                id: ids\r\n            }\r\n        });\r\n\r\n        return response.data.items = response.data.items.map((item, idx) => {\r\n            item.statistics = response2.data.items[idx].statistics;\r\n            return item;\r\n        });\r\n    }\r\n\r\n    nextPage = async () => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                part: \"snippet\",\r\n                key: this.key,\r\n                maxResults: this.maxResults,\r\n                q: this.state.currentSearch,\r\n                type: \"video\",\r\n                videoEmbeddable: true,\r\n                pageToken: this.state.nextPageToken\r\n            }\r\n        });\r\n\r\n        response.data.items = await this.getStatistics(response);\r\n\r\n        this.setState({\r\n            videos: this.state.videos.slice().concat(response.data.items),\r\n            nextPageToken: response.data.nextPageToken\r\n        })\r\n    };\r\n\r\n    getMostPopular = async () => {\r\n        const response = await youtube.get('/videos', {\r\n            params: {\r\n                part: this.part,\r\n                key: this.key,\r\n                maxResults: this.maxResults,\r\n                chart: \"mostPopular\",\r\n                regionCode: \"US\"\r\n            }\r\n        });\r\n        this.setState({\r\n            videos: response.data.items,\r\n            nextPageToken: response.data.nextPageToken\r\n        })\r\n    };\r\n\r\n    handleScroll = (e) => {\r\n        const bottom = e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight;\r\n        if (bottom) {\r\n            console.log('header bottom reached');\r\n            this.nextPage()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='feed'>\r\n                <div className='pr-2'>\r\n                    <div>\r\n                        <SearchBar onChange={(e) => this.onChange(e.target.value)} onKeyUp={this.submitByEnter}\r\n                        placeholder=\"Youtube video\" append={<InputGroup.Append>\r\n                            <Button variant=\"primary\" onClick={this.onSubmit}>\r\n                                Search\r\n                            </Button>\r\n                        </InputGroup.Append>}/>\r\n                    </div>\r\n                </div>\r\n                <div className='feed-items' onScroll={this.handleScroll}>\r\n                    {\r\n                        (this.state.videos.length !== 0) ?\r\n                            this.state.videos.map((video) => (\r\n                                <YoutubeItem video={video}/>\r\n                            ))\r\n                            : \"No video found\"\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\n\r\nexport default class Instagram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                I am Instagram\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Responsive, WidthProvider} from 'react-grid-layout';\r\nimport './grid-styles.css'\r\nimport './resizable-styles.css'\r\nimport _ from \"lodash\";\r\nimport AddFeed from './AddFeed'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTrashAlt, faArrowsAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Reddit from \"../api-feeds/reddit/Reddit\";\r\nimport Twitter from \"../api-feeds/twitter/Twitter\";\r\nimport Youtube from \"../api-feeds/youtube/Youtube\";\r\nimport Instagram from \"../api-feeds/Instagram\";\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst originalLayouts = getFromLS(\"layouts\") || {};\r\nconst originalItems = getFromLS(\"items\") || [];\r\nconst originalNewCounter = getFromLS(\"newCount\") + 1 || 0;\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            layouts: JSON.parse(JSON.stringify(originalLayouts)),\r\n            items: JSON.parse(JSON.stringify(originalItems)),\r\n            newCounter: originalNewCounter\r\n        };\r\n\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n    }\r\n\r\n    onLayoutChange(layout, layouts) {\r\n        saveToLS(\"layouts\", layouts);\r\n        this.setState({layouts});\r\n    }\r\n\r\n    onRemoveItem(i) {\r\n        console.log(\"removing\", i);\r\n        this.setState({items: _.reject(this.state.items, {i: i})},\r\n            () => saveToLS(\"items\", this.state.items));\r\n    }\r\n\r\n    onAddItem(name) {\r\n        /*eslint no-console: 0*/\r\n        console.log(\"adding\", \"n\" + this.state.newCounter);\r\n        this.setState({\r\n                // Add a new item. It must have a unique key!\r\n                items: this.state.items.concat({\r\n                    i: name + this.state.newCounter,\r\n                    x: (this.state.items.length * 2) % (this.state.cols || 6),\r\n                    y: 0, // puts it at the bottom\r\n                    w: 3,\r\n                    h: 3,\r\n                    minW: 3,\r\n                    minH: 3,\r\n                    type: name\r\n                }),\r\n                // Increment the counter to ensure key is always unique.\r\n                newCounter: this.state.newCounter + 1\r\n            },\r\n            () =>\r\n                saveToLS(\"items\", this.state.items),\r\n            saveToLS(\"newCount\", this.state.newCounter));\r\n    }\r\n\r\n    createElement(el) {\r\n        const i = el.i;\r\n        return (\r\n            <div key={i} data-grid={el}>\r\n                <span\r\n                    className=\"remove\"\r\n                    onClick={this.onRemoveItem.bind(this, i)}\r\n                ><FontAwesomeIcon icon={faTrashAlt}/></span>\r\n                <span\r\n                    className=\"drag-handle\"\r\n                ><FontAwesomeIcon icon={faArrowsAlt}/></span>\r\n                    {el.type === 'Twitter' ? (\r\n                        <Twitter/>\r\n                    ) : el.type === 'Youtube' ? (\r\n                        <Youtube/>\r\n                    ) : el.type === 'Instagram' ? (\r\n                        <Instagram/>\r\n                    ) : el.type === 'Reddit' ? (\r\n                        <Reddit/>\r\n                    ) : 'No feed.'\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddFeed onAddItem={this.onAddItem}/>\r\n\r\n                <ResponsiveGridLayout\r\n                    className=\"layout\"\r\n                    layouts={this.state.layouts}\r\n                    // breakpoints={{lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0}}\r\n                    cols={{lg: 12, md: 8, sm: 6, xs: 4, xxs: 3}}\r\n                    onLayoutChange={(layout, layouts) =>\r\n                        this.onLayoutChange(layout, layouts)\r\n                    }\r\n                    draggableHandle=\".drag-handle\">\r\n                    {_.map(this.state.items, el => this.createElement(el))}\r\n\r\n                </ResponsiveGridLayout>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nfunction getFromLS(key) {\r\n    let ls = {};\r\n    if (localStorage) {\r\n        try {\r\n            ls = JSON.parse(localStorage.getItem(key)) || {};\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return ls[key];\r\n}\r\n\r\nfunction saveToLS(key, value) {\r\n    if (localStorage) {\r\n        localStorage.setItem(\r\n            key,\r\n            JSON.stringify({\r\n                [key]: value\r\n            })\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './navbar/Navbar.js';\r\nimport Grid from './grid/Grid.js';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar onAddItem={this.onAddItem}/>\r\n                <Grid onAddItem={this.onAddItem}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}